services:
  bluetti-monitor-api:
    build: .
    ports:
      - "${API_PORT:-8000}:8000"
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - bluetti-monitor-worker

  bluetti-monitor-worker:
    build: .
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - ./data:/app/data
    command: ["python", "worker.py"]
    healthcheck:
      test: ["CMD", "python", "-c", "import sqlite3; conn = sqlite3.connect('/app/data/battery_readings.db'); cursor = conn.execute('SELECT timestamp FROM battery_readings ORDER BY timestamp DESC LIMIT 1'); result = cursor.fetchone(); conn.close(); import time; exit(0 if result and (time.time() - result[0] < 300) else 1)"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 120s